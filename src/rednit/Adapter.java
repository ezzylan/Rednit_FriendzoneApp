package rednit;

import java.awt.*;
import java.io.BufferedReader;
import java.io.*;
import java.net.*;
import java.sql.*;
import javax.swing.*;

public class Adapter extends javax.swing.JFrame {

    AESEncryptDecrypt aes = new AESEncryptDecrypt();
    String secretKey = "friendZoned!!!";
    Connection con = null;
    Connection con1 = null;
    PreparedStatement ps, ps1, ps2, ps3, ps4, psuser, pep = null;
    ResultSet rs2, rs, rs1, rs3, rs4, rsuser = null;
    private static double log = 0;
    private static double lat = 0;
    boolean userExist = false;
    
    public Adapter() {
        initComponents();
        
        //EVERY JFRAME SIZE
        setResizable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //INSERT ABOVE CODE 
        
        ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("backgroundTinder.png")));
        Image img1=myimage.getImage();
        Image img2=img1.getScaledInstance(background.getWidth(), background.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        background.setIcon(i);
        
        ImageIcon myimage1=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("tinder.png")));
        Image img3=myimage1.getImage();
        Image img4=img3.getScaledInstance(tinder.getWidth(), tinder.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i1 = new ImageIcon(img4);
        tinder.setIcon(i1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        done = new javax.swing.JButton();
        tinder = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(762, 462));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(196, 178, 188));
        jButton1.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 46, 60));
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Login your Tinder Account");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Username: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, -1, -1));

        username.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 360, -1));

        password.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, 360, -1));

        done.setText("Login");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });
        getContentPane().add(done, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 90, 40));
        getContentPane().add(tinder, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 370, 90));
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 964, 469));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
    String state[]={"Perlis", "Penang", "Kedah", "Kelantan", "Perak", "Terengganu", "Pahang", "Selangor", "N. Sembilan", 
        "Melaka", "Johor", "Sarawak", "Sabah", "W.P. Putrajaya", "W.P. KL", "W.P. Labuan"};
    int input;
        try{
            con = DriverManager.getConnection("jdbc:mysql://192.168.64.2/dating?serverTimezone=UTC", "root","");
            //CHECK AUTHENTICATION MATCH
            String access = "select * from tind where username=? AND password=?";
            ps = con.prepareStatement(access);      //Check db data username exist
            ps.setString(1, username.getText());    //to get text from text field
            ps.setString(2, password.getText());
            rs = ps.executeQuery();                 //Execute insert data
            if(rs.next()){
                //CHECK IF THE ACCOUNT ALREADY EXIST BY PRIMARY KEY
                String id = "select id from tind where username=?";
                ps1 = con.prepareStatement(id);
                ps1.setString(1, username.getText()); 
                rs1 = ps.executeQuery();
                while(rs1.next()){
                    int idcheck = rs1.getInt("id");
                    String checkid = "select id_tinder from data where id_tinder=?";
                    ps2 = con.prepareStatement(checkid);
                    ps2.setInt(1, idcheck); 
                    rs2 = ps2.executeQuery();
                    if(rs2.next()){
                        userExist = true;   //if exist
                     }else{
                        userExist = false;} //if not exist
                    
                    if(userExist==true){
                         JOptionPane.showMessageDialog(null, "This account already registered! Please proceed to login");
                         dispose();
                         Login main = new Login();
                         main.setVisible(true);
                    }else{
                        //CHECK EXISTING USERNAME
                        String checkUsername = "select id_username from data where id_username=?";
                        psuser = con.prepareStatement(checkUsername);      
                        psuser.setString(1, username.getText());
                        rsuser = psuser.executeQuery();
                            if(rsuser.next()){
                                String str = JOptionPane.showInputDialog("Your username already exists, please enter new username");
                                JComboBox state1 = new JComboBox(state);
                                input = JOptionPane.showConfirmDialog(this,state1,"Select state",JOptionPane.DEFAULT_OPTION);
                                String state2 = (String)state1.getSelectedItem();
                                String getdata = "SELECT * FROM tind WHERE id=?";
                                String insertdata = "INSERT INTO `data`(`id_tinder`, `id_name`, `id_state`, `id_email`, `id_phone`, `id_gender`, `id_interest`,`id_hobby`, `id_x`, `id_y`, `id_username`,`id_password`, `id_image`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                ps3 = con.prepareStatement(getdata);
                                ps3.setInt(1, idcheck); 
                                rs3 = ps3.executeQuery();
                                ps4 = con.prepareStatement(insertdata);
                                while(rs3.next()){
                                    int id1 = rs3.getInt("id");
                                    String name = rs3.getString("name");
                                    String email = rs3.getString("email");
                                    String phone = rs3.getString("phone");
                                    String gender = rs3.getString("gender");
                                    String interest = rs3.getString("interest");
                                    String hobby = rs3.getString("hobby");
                                    String password1 = rs3.getString("password");
                                    String postal = rs3.getString("postal");
                                    getLatLog(postal);
                                    byte[] image = rs3.getBytes("image");
                                    ps4.setInt(1, id1);
                                    ps4.setString(2, name);
                                    ps4.setString(3, state2);
                                    ps4.setString(4, email);
                                    ps4.setString(5, phone);
                                    ps4.setString(6, gender);
                                    ps4.setString(7, interest);
                                    ps4.setString(8, hobby);
                                    ps4.setDouble(9, log);
                                    ps4.setDouble(10, lat);
                                    ps4.setString(11, str);
                                    ps4.setString(12, aes.encrypt(password1, secretKey));
                                    ps4.setBytes(13, image);
                                    ps4.execute();}
                                    JOptionPane.showMessageDialog(null, "You may login now");
                            }else{
                                JComboBox state1 = new JComboBox(state);
                                input = JOptionPane.showConfirmDialog(this,state1,"Please enter your current state",JOptionPane.DEFAULT_OPTION);
                                String state2 = (String)state1.getSelectedItem();
                                String getdata = "SELECT * FROM tind WHERE id=?";
                                String insertdata = "INSERT INTO `data`(`id_tinder`, `id_name`, `id_state`, `id_email`, `id_phone`, `id_gender`, `id_interest`,`id_hobby`, `id_x`, `id_y`, `id_username`,`id_password`, `id_image`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                ps3 = con.prepareStatement(getdata);
                                ps3.setInt(1, idcheck); 
                                rs3 = ps3.executeQuery();
                                ps4 = con.prepareStatement(insertdata);
                                while(rs3.next()){
                                    int id1 = rs3.getInt("id");
                                    String name = rs3.getString("name");
                                    String email = rs3.getString("email");
                                    String phone = rs3.getString("phone");
                                    String gender = rs3.getString("gender");
                                    String interest = rs3.getString("interest");
                                    String hobby = rs3.getString("hobby");
                                    String username1 = rs3.getString("username");
                                    String password1 = rs3.getString("password");
                                    String postal = rs3.getString("postal");
                                    getLatLog(postal);
                                    byte[] image = rs3.getBytes("image");
                                    ps4.setInt(1, id1);
                                    ps4.setString(2, name);
                                    ps4.setString(3, state2);
                                    ps4.setString(4, email);
                                    ps4.setString(5, phone);
                                    ps4.setString(6, gender);
                                    ps4.setString(7, interest);
                                    ps4.setString(8, hobby);
                                    ps4.setDouble(9, log);
                                    ps4.setDouble(10, lat);
                                    ps4.setString(11, username1);
                                    ps4.setString(12, aes.encrypt(password1, secretKey));
                                    ps4.setBytes(13, image);
                                    ps4.execute();}
                                JOptionPane.showMessageDialog(null, "You may login now");}}
                        
                        
                        
                }
            }else{
                JOptionPane.showMessageDialog(null, "The username & password not match");
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_doneActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new homepage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Adapter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Adapter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Adapter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Adapter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Adapter().setVisible(true);
            }
        });
    }
    
    public void getLatLog(String postcode) throws MalformedURLException, IOException {
        postcode += ("%20Malaysia");

        URL open = new URL("https://api.opencagedata.com/geocode/v1/xml?q=" + postcode + "&key=b02b99c4258c48898ab9e5352953aa71&language=en&pretty=1");
        URLConnection c = open.openConnection();
        BufferedReader reader = new BufferedReader(new InputStreamReader(c.getInputStream()));

        String line;
        String[] arr1 = new String[1];
        String[] arr2 = new String[1];

        while ((line = reader.readLine()) != null) {
            if (line.equalsIgnoreCase("      <geometry>")) {
                line = reader.readLine();
                arr1 = line.replace(" ", "").split("<");
                line = reader.readLine();
                arr2 = line.replace(" ", "").split("<");
                break;
            }
        }
        reader.close();
        String result1 = "";
        String result2 = "";

        for (String s : arr1) {
            String[] a = s.split(">");

            for (String d : a) {
                result1 += (d + " ");
            }
        }

        for (String s : arr2) {
            String[] a = s.split(">");

            for (String d : a) {
                result2 += (d + " ");
            }
        }
        arr1 = result1.split(" ");
        arr2 = result2.split(" ");

        lat = Double.parseDouble(arr1[2]);
        log = Double.parseDouble(arr2[2]);
    }
    
     public boolean userAlreadyExist(String name){

        boolean userExist = false;
        try{
        String sql ="select id_username from data where id_username=?";
        con = DriverManager.getConnection("jdbc:mysql://localhost/dating?serverTimezone=UTC", "root","");
        ps2 = con.prepareStatement(sql);
        ps2.setString(1, name);
        rs2 = ps2.executeQuery();

        String tempName = ""; 

        if(rs2.next()){
            tempName = rs2.getString("id_username");
            if(tempName.equals(name)){
                userExist = true;
            }
            else{
                userExist = false;
            }
        } 
        ps2.close();
        } catch (SQLException e){
            System.out.println("SQL Exception: "+ e.toString());
        }

        return userExist;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    protected javax.swing.JButton done;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel tinder;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
